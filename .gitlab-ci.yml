# Possible options aside from empty in GitLab settings are:
# .gitlab-ci.yml@jdkgabri/project-scaffolding-pipelines (separate repo with just gitlab-ci.yml and pipeline .yml files)
# https://raw.githubusercontent.com/Nakama-Partnering-Services/nakama-project-scaffolding/main/.gitlab-ci.yml

# TODO: Try to run pipelines for external pull requests in GitHub: https://docs.gitlab.com/ee/ci/ci_cd_for_external_repos/index.html#pipelines-for-external-pull-requests

# Variables for manual-deployment: some variables referenced in job rules, although empty,
# they exist since they are declared here, so we need to check emptyness specifically

variables:
    DESTINATION_ENVIRONMENT:
        value: ''
        description: 'Destination environment for the manual deployment. Possible values are: CICD, QA, UAT, PRODUCTION, HOTFIX.'

    METADATA_DEPLOYMENT:
        value: 'false'
        description: 'Set to "true" if Salesforce metadata should be deployed. If VLOCITY_DEPLOYMENT is also set to "true", Salesforce metadata deployment occurs first.'

    VLOCITY_DEPLOYMENT:
        value: 'false'
        description: 'Set to "true" if Vlocity data should be deployed. If METADATA_DEPLOYMENT is also set to "true", Salesforce metadata deployment occurs first.'

    checkonly:
        value: 'false'
        description: 'Set to "true" if you do not want the package(s) to be actually deployed, but just validated. Only applies when METADATA_DEPLOYMENT is set to "true". Vlocity deployments can not be only validations.'

    testlevel:
        value: 'RunLocalTests'
        description: 'Possible values are: NoTestRun, RunSpecifiedTests, RunLocalTests, RunAllTestsInOrg. Only applies when METADATA_DEPLOYMENT is set to "true". Default value is RunSpecifiedTests.'

    runtests:
        value: ''
        description: 'Lists the Apex classes containing the deployment tests to run. Use this parameter when testlevel is RunSpecifiedTests. Only applies when METADATA_DEPLOYMENT is set to "true". Default value is based on autoidentified test classes.'

stages:
    - dispatch-child-pipeline
    # Moved here from validate.yml to work with included yml rather than dispatched child pipeline
    - generate-code_quality-report
    - install-npm
    - local-validations
    - org-validations
    - show-results
    - identify-non-test-classes
    - verify-test-coverage
    - org-validations-vlocity
    - delete-scratch-org

.any-changes:
    - sfdx-source/**/main/**/*
    - sfdx-source/**/test/classes/**/*
    - sfdx-source/**/vlocity/**/*

.dest-envs:
    - CICD
    # - QA
    # TODO: add lower environments

validate-merge-request:
    stage: dispatch-child-pipeline
    rules:
        - if: $VALIDATE_MERGE_REQUEST && $CI_PIPELINE_SOURCE == "merge_request_event" && ($CI_MERGE_REQUEST_TARGET_BRANCH_NAME == $CI_DEFAULT_BRANCH || $CI_MERGE_REQUEST_TARGET_BRANCH_NAME =~ /^rc/ || $CI_MERGE_REQUEST_TARGET_BRANCH_NAME =~ /^patch/)
    script:
        - echo 'Starting MR validation with includes...'

# Include is used with yml rather than dispatching child pipeline so that Unit test report are visible in parent pipeline
# until this is solved: https://gitlab.com/gitlab-org/gitlab/-/issues/212894
include:
    - local: '.gitlab/pipelines/validate.yml'
      rules:
          - if: $VALIDATE_MERGE_REQUEST && $CI_PIPELINE_SOURCE == "merge_request_event" && ($CI_MERGE_REQUEST_TARGET_BRANCH_NAME == $CI_DEFAULT_BRANCH || $CI_MERGE_REQUEST_TARGET_BRANCH_NAME =~ /^rc/ || $CI_MERGE_REQUEST_TARGET_BRANCH_NAME =~ /^patch/)

deploy-QA-and-lower-environments:
    stage: dispatch-child-pipeline
    rules:
        - if: $CI_COMMIT_BRANCH && $CI_OPEN_MERGE_REQUESTS
          when: never
        - if: $DEPLOY && $CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
          changes: !reference [.any-changes]
    variables:
        DESTINATION_ENVIRONMENT: $DESTINATION_ENVIRONMENT
    trigger:
        include:
            '.gitlab/pipelines/deploy.yml'
            # - project: 'jdkgabri/nakama-project-scaffolding'
            #   ref: 'main'
            #   file: '.gitlab/pipelines/deploy.yml'
            # - remote: 'https://raw.githubusercontent.com/Nakama-Partnering-Services/nakama-project-scaffolding/main/.gitlab/pipelines/deploy.yml'
        strategy: depend
    parallel:
        matrix:
            - DESTINATION_ENVIRONMENT: !reference [.dest-envs]

deploy-UAT:
    stage: dispatch-child-pipeline
    rules:
        - if: $CI_COMMIT_BRANCH && $CI_OPEN_MERGE_REQUESTS
          when: never
        - if: $DEPLOY && $CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH =~ /^rc/
          changes: !reference [.any-changes]
    variables:
        DESTINATION_ENVIRONMENT: UAT
    trigger:
        include:
            '.gitlab/pipelines/deploy.yml'
            # - project: 'jdkgabri/nakama-project-scaffolding'
            #   ref: 'main'
            #   file: '.gitlab/pipelines/deploy.yml'
            # - remote: 'https://raw.githubusercontent.com/Nakama-Partnering-Services/nakama-project-scaffolding/main/.gitlab/pipelines/deploy.yml'
        strategy: depend

create-frameworks-package-version:
    stage: dispatch-child-pipeline
    rules:
        - if: $CREATE_PACKAGE_VERSION_DISABLED
          when: never
        - if: $CI_COMMIT_BRANCH && $CI_OPEN_MERGE_REQUESTS
          when: never
        - if: $DEPLOY && $CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
          changes:
              - frameworks/**/*
    trigger:
        include:
            '.gitlab/pipelines/create-frameworks-package-version.yml'
            # - project: 'jdkgabri/nakama-project-scaffolding'
            #   ref: 'main'
            #   file: '.gitlab/pipelines/create-frameworks-package-version.yml'
            # - remote: 'https://raw.githubusercontent.com/Nakama-Partnering-Services/nakama-project-scaffolding/main/.gitlab/pipelines/create-frameworks-package-version.yml'
        strategy: depend

manual-deployment:
    stage: dispatch-child-pipeline
    rules:
        - if: $DESTINATION_ENVIRONMENT && $DESTINATION_ENVIRONMENT != "" && ($METADATA_DEPLOYMENT == "true" || $VLOCITY_DEPLOYMENT == "true")
    # Note: ths is not supposed to be needed since as per documentation it should be the default behaviour, however it is a non working issue: https://gitlab.com/gitlab-org/gitlab/-/issues/322772
    variables:
        DESTINATION_ENVIRONMENT: $DESTINATION_ENVIRONMENT
        # AUTOMATIC_DELTAS_FROM: $AUTOMATIC_DELTAS_FROM
        METADATA_DEPLOYMENT: $METADATA_DEPLOYMENT
        VLOCITY_DEPLOYMENT: $VLOCITY_DEPLOYMENT
        checkonly: $checkonly
        testlevel: $testlevel
        runtests: $runtests
    trigger:
        include:
            '.gitlab/pipelines/manual-deployment.yml'
            # - project: 'jdkgabri/nakama-project-scaffolding'
            #   ref: 'main'
            #   file: '.gitlab/pipelines/manual-deployment.yml'
            # - remote: 'https://raw.githubusercontent.com/Nakama-Partnering-Services/nakama-project-scaffolding/main/.gitlab/pipelines/manual-deployment.yml'
        strategy: depend

scheduled-tests:
    stage: dispatch-child-pipeline
    rules:
        - if: $DAILY_VALIDATION_DEPLOYMENT_DISABLED && $DAILY_RUN_LOCAL_TESTS_DISABLED
          when: never
          # Note: this second checks, not others as exists or null, works when variable is not even declared, so we check as well in each pipeline job individually
        - if: $CI_PIPELINE_SOURCE == "schedule" && $DESTINATION_ENVIRONMENT != ""
    variables:
        DESTINATION_ENVIRONMENT: $DESTINATION_ENVIRONMENT
    trigger:
        include:
            '.gitlab/pipelines/scheduled-tests.yml'
            # - project: 'jdkgabri/nakama-project-scaffolding'
            #   ref: 'main'
            #   file: '.gitlab/pipelines/scheduled-tests.yml'
            # - remote: 'https://raw.githubusercontent.com/Nakama-Partnering-Services/nakama-project-scaffolding/main/.gitlab/pipelines/scheduled-tests.yml'
        strategy: depend

scheduled-scratch-orgs-creation:
    stage: dispatch-child-pipeline
    rules:
        - if: $DAILY_SCRATCH_ORGS_CREATION_DISABLED
          when: never
        - if: $CI_PIPELINE_SOURCE == "schedule"
    trigger:
        include:
            '.gitlab/pipelines/scheduled-scratch-orgs-creation.yml'
            # - project: 'jdkgabri/nakama-project-scaffolding'
            #   ref: 'main'
            #   file: '.gitlab/pipelines/scheduled-scratch-orgs-creation.yml'
            # - remote: 'https://raw.githubusercontent.com/Nakama-Partnering-Services/nakama-project-scaffolding/main/.gitlab/pipelines/scheduled-scratch-orgs-creation.yml'
        strategy: depend
