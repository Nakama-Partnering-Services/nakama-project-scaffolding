# Azure Pipelines doesn't support all YAML features.
# Unsupported features include anchors, complex keys, and sets.
# Also, unlike standard YAML, Azure Pipelines depends on seeing stage, job, task, or a task shortcut like script as the first key in a mapping.

name: '$(Build.SourceBranchName) $(Date:yyyy)-$(Date:MM)-$(Date:dd) ($(Rev:rr))'

schedules:
    - cron: '0 22 * * *' # UTC Timezone
      displayName: 'Daily midnight (CET) validation deployment to run local tests'
      branches:
          include:
              - main
      always: true

trigger:
    branches:
        include:
            - main
            - rc/*
    paths:
        include:
            - core/*

# Note: this is only supported for GitHub and Bitbucket Cloud, for Azure, it is needed to set up branch policies.
# pr:
#     branches:
#         include:
#             - main
#             - rc/*
#     paths:
#         include:
#             - core/*

pool:
    vmImage: 'ubuntu-latest'

# Note: if a parameter does not have a default value, it will be required, hence, for the most optional ones, we set 'false' as default.
parameters:
    - name: TARGET_ORG
      displayName: 'Target org'
      type: string
      default: 'PRODUCTION'
    - name: USE_MOST_RECENT
      displayName: 'Use most recent validation deployment'
      type: boolean
      default: false
    - name: DRY_RUN
      displayName: 'Dry run validation deployment'
      type: boolean
      default: true
    - name: TEST_LEVEL
      displayName: 'Test level'
      type: string
      default: 'Default'
      values:
          - NoTestRun
          - RunSpecifiedTests
          - RunLocalTests
          - RunAllTestsInOrg
          - Default
    - name: TESTS
      displayName: 'Tests classes to run'
      type: string
      default: 'false'
    - name: PACKAGE_VERSION_ID
      displayName: 'Package version Id'
      type: string
      default: 'false'
    - name: INSTALLATION_KEY
      displayName: 'Installation key'
      type: string
      default: 'false'

# Note: in order to use a private docker image, follow these instructions and add Service Connection name to container.endpoint property: https://stackoverflow.com/questions/66429863/how-to-push-an-image-to-docker-hub-in-azure-pipelines
stages:
    - ${{ if eq(variables['Build.Reason'], 'PullRequest') }}:
          - template: .azure/templates/validate-pull-request.yml

    - ${{ if eq(variables['Build.Reason'], 'IndividualCI') }}:
          - template: .azure/templates/deploy-on-push.yml

    - ${{ if and(eq(variables['Build.Reason'], 'Manual'), eq(parameters.PACKAGE_VERSION_ID, 'false'), or(startsWith( variables['Build.SourceBranch'], 'refs/heads/rc'), startsWith(variables['Build.SourceBranch'], 'refs/heads/patch'))) }}:
          - template: .azure/templates/manual-deployment.yml
            parameters:
                TARGET_ORG: ${{ parameters.TARGET_ORG }}
                USE_MOST_RECENT: ${{ parameters.USE_MOST_RECENT }}
                DRY_RUN: ${{ parameters.DRY_RUN }}
                TEST_LEVEL: ${{ parameters.TEST_LEVEL }}
                TESTS: ${{ parameters.TESTS }}

    - ${{ if and(eq(variables['Build.Reason'], 'Manual'), ne(parameters.PACKAGE_VERSION_ID, 'false')) }}:
          - template: .azure/templates/install-package.yml
            parameters:
                PACKAGE_VERSION_ID: ${{ parameters.PACKAGE_VERSION_ID }}
                INSTALLATION_KEY: ${{ parameters.INSTALLATION_KEY }}

    - ${{ if eq(variables['Build.Reason'], 'Schedule') }}:
          - template: .azure/templates/run-apex-tests.yml
