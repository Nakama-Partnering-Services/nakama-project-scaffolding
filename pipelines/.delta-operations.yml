generate-deltas-push:
    stage: generate-deltas
    rules:
        - if: $CI_PIPELINE_SOURCE == "push"
          changes: !reference [.sfdx-changes]
    environment: integration
    resource_group: integration
    script:
        - sf plugins install sfdx-git-delta
        - mkdir deltas
        # Note: upon rebasing release branch onto main, even if the previous commit SHA for the target environment does not exists,
        # deltas against HEAD are calculated from the previous branch status, and hence, only the changes on the rebased commits appear as deltas
        - sf sgd source delta --source sfdx-source --from $INTEGRATION_SFDX_LAST_DEPLOYMENT_COMMIT_SHA --to HEAD --output deltas --ignore .forceignore --generate-delta
    artifacts:
        paths:
            - deltas

generate-deltas-merge-request:
    stage: generate-deltas
    rules:
        - if: $VALIDATE_INTEGRATION_DISABLED
          when: never
        - if: $CI_PIPELINE_SOURCE == "merge_request_event"
          changes: !reference [.sfdx-changes]
    script:
        - sf plugins install sfdx-git-delta
        - mkdir deltas
        - sf sgd source delta --source sfdx-source --from $CI_MERGE_REQUEST_DIFF_BASE_SHA --to HEAD --output deltas --ignore .forceignore --generate-delta
    artifacts:
        paths:
            - deltas

generate-deltas-scheduled:
    stage: generate-deltas
    rules:
        - if: $DAILY_DELTAS_DEPLOYMENT_TESTING_DISABLED
          when: never
        - if: $DESTINATION_ENVIRONMENT
          when: never
        - if: $CI_PIPELINE_SOURCE == "schedule"
    environment: testing
    resource_group: testing
    script:
        - sf plugins install sfdx-git-delta
        - mkdir deltas
        - sf sgd source delta --source sfdx-source --from $TESTING_SFDX_LAST_DEPLOYMENT_COMMIT_SHA --to HEAD --output deltas --ignore .forceignore --generate-delta
    artifacts:
        paths:
            - deltas

generate-deltas-manual-deployment:
    stage: generate-deltas
    rules:
        - if: $DESTINATION_ENVIRONMENT != "" && $METADATA_DEPLOYMENT == "true" && ($DELTAS_FROM != "" || $AUTOMATIC_DELTAS_FROM == "true")
    environment: $DESTINATION_ENVIRONMENT
    resource_group: $DESTINATION_ENVIRONMENT
    script:
        - DELTAS_FROM=$(if [ ! $DELTAS_FROM ]; then eval echo \${${DESTINATION_ENVIRONMENT^^}_SFDX_LAST_DEPLOYMENT_COMMIT_SHA}; else echo $DELTAS_FROM; fi)
        - sf plugins install sfdx-git-delta
        - mkdir deltas
        - sf sgd source delta --source sfdx-source/$PACKAGE_TO_DEPLOY --from $DELTAS_FROM --to HEAD --output deltas --ignore .forceignore --generate-delta
    artifacts:
        paths:
            - deltas

# If this job is used instead of identify-test-classes, --generate-delta parameter can be removed from sgd commands
# identify-test-classes-by-name:
#     image: python:latest
#     stage: identify-test-classes
#     rules:
#         - if: $CI_PIPELINE_SOURCE == "schedule" && $DESTINATION_ENVIRONMENT == ""
#         - if: $DESTINATION_ENVIRONMENT != "" && $METADATA_DEPLOYMENT == "true" && ($DELTAS_FROM != "" || $AUTOMATIC_DELTAS_FROM == "true") && ($TEST_LEVEL == "" || $TEST_LEVEL == "RunSpecifiedTests") && $TESTS_TO_RUN == ""
#           changes: !reference [.sfdx-changes]
#         - if: $CI_PIPELINE_SOURCE == "push"
#           changes: !reference [.sfdx-changes]
#         - if: $VALIDATE_INTEGRATION_DISABLED
#           when: never
#         - if: $CI_PIPELINE_SOURCE == "merge_request_event"
#           changes: !reference [.sfdx-changes]
#     script:
#         - apt-get update
#         - apt-get install -y jq
#         - pip3 install yq
#         - TEST_CLASSES=$(xq . < deltas/package/package.xml | jq '.Package.types | if type == "array" then .[] else . end | select(.name == "ApexClass") | .members | if type == "array" then map(select(endswith("Test"))) | join(",") else select(endswith("Test")) end' | tr -d '"')
#         - echo "TEST_CLASSES=$TEST_CLASSES" >> tests.env
#     artifacts:
#         reports:
#             dotenv: tests.env

identify-test-classes:
    stage: identify-test-classes
    rules:
        - if: $DESTINATION_ENVIRONMENT != "" && $METADATA_DEPLOYMENT == "true" && ($DELTAS_FROM != "" || $AUTOMATIC_DELTAS_FROM == "true") && ($TEST_LEVEL == "" || $TEST_LEVEL == "RunSpecifiedTests") && $TESTS_TO_RUN == ""
        - if: $VALIDATE_INTEGRATION_DISABLED == "" && $CI_PIPELINE_SOURCE == "merge_request_event"
          changes: !reference [.sfdx-changes]
        # Commented since for now, we are not running specified tests in corresponding jobs
        # - if: $DAILY_DELTAS_DEPLOYMENT_TESTING_DISABLED != "" && $CI_PIPELINE_SOURCE == "schedule" && $DESTINATION_ENVIRONMENT == ""
        # - if: $CI_PIPELINE_SOURCE == "push"
        #   changes: !reference [.sfdx-changes]
    script:
        - TEST_CLASSES=$((egrep -wrli @IsTest deltas || echo "") | xargs -rL 1 basename | sed 's/.cls//g' | paste -sd "," -)
        - echo "TEST_CLASSES=$TEST_CLASSES" >> tests.env
    artifacts:
        reports:
            dotenv: tests.env
