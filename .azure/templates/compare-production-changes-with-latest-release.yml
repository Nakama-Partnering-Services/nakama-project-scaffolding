stages:
    - stage: compare_production_changes_with_latest_release
      displayName: 'Compare production changes with latest release'
      jobs:
          - job: Retrieve_and_compare
            displayName: 'Retrieve and compare'
            container:
                image: nakamapartneringservices/nakama-pipelines
                endpoint: DockerHubNakama
            # variables:
            #     HUSKY: 0 # Note: not needed because we have set the husky hook files to be not executable.
            steps:
                - checkout: self
                  persistCredentials: true

                # Note: this requires the Build Services user to have the "Contribute" and "Create branch" permission.
                # https://stackoverflow.com/questions/56541458/azure-pipeline-doest-allow-to-git-push-throwing-genericcontribute-permission
                - script: |
                      git config --global user.email "$(Build.RequestedForEmail)"
                      git config --global user.name "$(Build.RequestedFor)"
                      git config advice.ignoredHook false
                      # Note: this can fail if no differences are found.
                      sf nakama prepare production comparison
                      echo "##vso[task.setvariable variable=RC_BRANCH]$(jq -r .rcBranch comparison.json)"
                      echo "##vso[task.setvariable variable=COMPARISON_BRANCH]$(jq -r .comparisonBranch comparison.json)"
                      echo "##vso[task.setvariable variable=CURRENT_DATETIME]$(jq -r .currentDatetime comparison.json)"
                      rm -f comparison.json
                  displayName: 'Prepare production comparison'
                  # Note: secret variables need to be declared here to be available.
                  env:
                      PRODUCTION_SFDX_AUTH_URL: $(PRODUCTION_SFDX_AUTH_URL)

                # Note: this requires the Build Services user to have the "Contribute to pull requests" permission.
                - script: |
                      git add . && git commit -m "fix: track changes retrieved from production since last release" && git push
                      URL="${SYSTEM_TEAMFOUNDATIONCOLLECTIONURI}${SYSTEM_TEAMPROJECTID}/_apis/git/repositories/${BUILD_REPOSITORY_ID}/pullrequests?api-version=7.1"
                      BODY='{\"sourceRefName\": \"refs/heads/%s\", \"targetRefName\": \"refs/heads/%s\", \"title\": \"fix: track changes retrieved from production (%s) since last release\", \"description\": \"Created by Azure DevOps pipeline - Compares changes done in production (not tracked in Git) with a branch created from latest release tag. Once merged, create a new patch release and rebase it accordingly.\", \"completionOptions\": {\"deleteSourceBranch\": true, \"mergeCommitMessage\": \"fix: track changes retrieved from production since last release\", \"mergeStrategy\": \"squash\"}}'
                      printf "$BODY" "$COMPARISON_BRANCH" "$RC_BRANCH" "$CURRENT_DATETIME" "$DEFAULT_REVIEWERS" > BODY.json
                      curl -X POST $URL -H "Authorization: Bearer $SYSTEM_ACCESSTOKEN" -H "Content-Type: application/json" -d @BODY.json
                  displayName: 'Create pull request'
                  condition: ne(variables.COMPARISON_BRANCH, '')
                  env:
                      SYSTEM_ACCESSTOKEN: $(System.AccessToken)
