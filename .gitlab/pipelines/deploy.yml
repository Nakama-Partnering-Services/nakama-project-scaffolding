image: salesforce/salesforcedx:latest-full

.sfdx-changes:
    - sfdx-source/**/main/**/*
    - sfdx-source/**/test/classes/**/*

.vlocity-changes:
    - sfdx-source/**/vlocity/**/*

stages:
    - generate-deltas
    - deploy-deltas
    - deploy-vlocity

generate-deltas:
    stage: generate-deltas
    rules:
        - if: $DESTINATION_ENVIRONMENT
          changes: !reference [.sfdx-changes]
    environment: $DESTINATION_ENVIRONMENT
    resource_group: $DESTINATION_ENVIRONMENT
    script:
        - sf plugins install sfdx-git-delta
        - mkdir deltas
        # Note: upon rebasing release branch onto main, previous commit SHA for the target environment would work if it still exists as part of any other branch in the repository,
        # even if that commit does not exist anymore in the rebased branch
        - SFDX_LAST_DEPLOYMENT_COMMIT_SHA=$(eval echo \${${DESTINATION_ENVIRONMENT^^}_SFDX_LAST_DEPLOYMENT_COMMIT_SHA})
        - sf sgd source delta --source sfdx-source --from $SFDX_LAST_DEPLOYMENT_COMMIT_SHA --to HEAD --output deltas --ignore .forceignore --generate-delta
    artifacts:
        paths:
            - deltas

deploy-deltas:
    stage: deploy-deltas
    rules:
        - if: $DESTINATION_ENVIRONMENT
          changes: !reference [.sfdx-changes]
    environment: $DESTINATION_ENVIRONMENT
    resource_group: $DESTINATION_ENVIRONMENT
    script:
        - DESTINATION_SFDX_AUTH_URL=$(eval echo \${${DESTINATION_ENVIRONMENT^^}_SFDX_AUTH_URL})
        - sfdx auth:sfdxurl:store --sfdxurlfile $DESTINATION_SFDX_AUTH_URL --setdefaultusername
        - npm install fast-xml-parser
        - node scripts/node/environment-replacements/main.js || true
        - cp --recursive specific-environments/$DESTINATION_ENVIRONMENT/. sfdx-source/ || true
        # RUN_TEST_PARAMETER can be uncommented to double also run tests on deployments to integration, however it is redundant with MR and will take longer.
        # - RUN_TEST_PARAMETER=$(if [ $TEST_CLASSES ]; then echo "--testlevel RunSpecifiedTests --runtests $TEST_CLASSES"; else echo ""; fi)
        - sfdx force:source:deploy --manifest deltas/package/package.xml --postdestructivechanges deltas/destructiveChanges/destructiveChanges.xml
        - |
            curl --request PUT --header "PRIVATE-TOKEN: $PIPELINE_ACCESS_TOKEN" \
              "$CI_API_V4_URL/projects/$CI_PROJECT_ID/variables/${DESTINATION_ENVIRONMENT^^}_SFDX_LAST_DEPLOYMENT_COMMIT_SHA" --form "value=$CI_COMMIT_SHA"

deploy-vlocity:
    stage: deploy-vlocity
    rules:
        - if: $DESTINATION_ENVIRONMENT
          changes: !reference [.vlocity-changes]
    environment: $DESTINATION_ENVIRONMENT
    resource_group: $DESTINATION_ENVIRONMENT
    script:
        - DELTAS_FROM=$(eval echo \${${DESTINATION_ENVIRONMENT^^}_VLOCITY_LAST_DEPLOYMENT_COMMIT_SHA})
        # Note: upon rebasing release branch onto main, previous commit SHA for the target environment would work if it still exists as part of any other branch in the repository,
        # even if that commit does not exist anymore in the rebased branch
        - VLOCITY_CHANGED_FILES=$(git diff-tree --diff-filter=AM --no-commit-id --name-only -r $DELTAS_FROM HEAD -- **/vlocity/**)
        - VLOCITY_PACKAGES_TO_DEPLOY=$(for file in $VLOCITY_CHANGED_FILES; do echo ${file%/vlocity/*}; done | tr ' ' '\n' | sort -u)
        - DESTINATION_SFDX_AUTH_URL=$(eval echo \${${DESTINATION_ENVIRONMENT^^}_SFDX_AUTH_URL})
        - sfdx auth:sfdxurl:store --sfdxurlfile $DESTINATION_SFDX_AUTH_URL --setalias Org --setdefaultusername
        - |
            for PACKAGE in $VLOCITY_PACKAGES_TO_DEPLOY;
            do
                npx vlocity -sfdx.username Org -job $PACKAGE/vlocity.yaml packDeploy --verbose true --simpleLogging true
                npx vlocity -sfdx.username Org -job $PACKAGE/vlocity.yaml packRetry --verbose true --simpleLogging true
            done
        - |
            curl --request PUT --header "PRIVATE-TOKEN: $PIPELINE_ACCESS_TOKEN" \
              "$CI_API_V4_URL/projects/$CI_PROJECT_ID/variables/${DESTINATION_ENVIRONMENT^^}_VLOCITY_LAST_DEPLOYMENT_COMMIT_SHA" --form "value=$CI_COMMIT_SHA"
