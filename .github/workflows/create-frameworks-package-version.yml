name: Create Frameworks Package Version

on:
    push:
        branches: main
        paths:
            - frameworks/**

jobs:
    create-package-version:
        name: 'Create unlocked package version'
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2

            - name: 'Restore node_modules cache'
              id: cache-npm
              uses: actions/cache@v2
              with:
                  path: node_modules
                  key: npm-${{ hashFiles('**/package-lock.json') }}
                  restore-keys: |
                      npm-${{ env.cache-name }}-
                      npm-

            - name: 'Install npm dependencies'
              if: steps.cache-npm.outputs.cache-hit != 'true'
              run: npm ci

            - name: Install Salesforce CLI
              run: npm install sfdx-cli --global

            - name: 'Create Dev Hub auth file'
              run: echo ${{ secrets.DEVHUB_SFDX_AUTH_URL }} > ./DEVHUB_SFDX_AUTH_URL.txt

            - name: 'Authorize Dev Hub'
              run: sfdx auth:sfdxurl:store --sfdxurlfile ./DEVHUB_SFDX_AUTH_URL.txt --setalias 'Dev Hub' --setdefaultdevhubusername

            - name: 'Remove Dev Hub auth file'
              run: rm --force ./DEVHUB_SFDX_AUTH_URL.txt

            - name: 'Create package version - Frameworks'
              id: package-frameworks
              run: |
                  json=$(sfdx force:package:version:create --package Frameworks --installationkeybypass --codecoverage --wait 30 --json)
                  packageVersionId=$(echo $json | jq -r '.result.SubscriberPackageVersionId')
                  echo "::set-output name=packageVersionId::$packageVersionId"

            - name: 'Update sfdx-project.json and README.md'
              uses: trailheadapps/github-action-sfdx-packaging-updater@1.1.0

            - name: 'Persist sfdx-project.json and README.md'
              run: |
                  git config --local user.email "action@github.com"
                  git config --local user.name "GitHub Action Bot"
                  npx prettier --write sfdx-project.json README.md
                  git add sfdx-project.json README.md
                  git commit -m "Updated sfdx-project.json and README.md with new package version"
                  git push

            - name: 'Create scratch org'
              continue-on-error: true
              run: sfdx force:org:create --definitionfile config/project-scratch-def.json --setdefaultusername --durationdays 1 --setalias scratch-org

            - name: 'Install Frameworks in scratch org'
              continue-on-error: true
              run: |
                  versionId=$(echo '${{ steps.package-frameworks.outputs.packageVersionId }}')
                  sfdx force:package:install --package $versionId --publishwait 10 --wait 10 --noprompt
