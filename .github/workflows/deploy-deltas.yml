name: Deploy deltas

on:
    workflow_call:
        inputs:
            DESTINATION_ENVIRONMENT:
                required: true
                type: string

jobs:
    deploy-deltas:
        name: 'Deploy deltas'
        runs-on: ubuntu-latest
        environment: ${{ inputs.DESTINATION_ENVIRONMENT }}
        concurrency:
            group: ${{ inputs.DESTINATION_ENVIRONMENT }}-${{ github.ref }}
            cancel-in-progress: true
        steps:
            - uses: actions/checkout@v2
              with:
                  fetch-depth: 0

            - name: Install Salesforce CLI
              run: npm install sfdx-cli --global

            - name: 'Create Destination auth file'
              env:
                  SFDX_AUTH_URL: ${{ inputs.DESTINATION_ENVIRONMENT }}_SFDX_AUTH_URL
              run: echo ${{ secrets[env.SFDX_AUTH_URL] }} > ./DESTINATION_SFDX_AUTH_URL.txt

            - name: 'Authorize Destination'
              run: sfdx auth:sfdxurl:store --sfdxurlfile ./DESTINATION_SFDX_AUTH_URL.txt --setdefaultusername

            - name: 'Remove Destination auth file'
              run: rm --force ./DESTINATION_SFDX_AUTH_URL.txt

            - name: 'Load .env.replacements'
              uses: xom9ikk/dotenv@v2
              with:
                  path: ./
                  mode: replacements

            # Note: Tests do not run since it is redundant with PR and will take longer
            # TODO: handle vlocity deployments as well
            - name: 'Get deltas and deploy'
              env:
                  LAST_DEPLOYMENT_COMMIT_SHA: ${{ inputs.DESTINATION_ENVIRONMENT }}_LAST_DEPLOYMENT_COMMIT_SHA
              run: |
                  ./scripts/shell/pipelines/deploy.sh ${{ inputs.DESTINATION_ENVIRONMENT }} ${{ secrets[env.LAST_DEPLOYMENT_COMMIT_SHA] }} false NoTestRun

            - name: 'Update last deployment commit SHA'
              env:
                  LAST_DEPLOYMENT_COMMIT_SHA: ${{ inputs.DESTINATION_ENVIRONMENT }}_LAST_DEPLOYMENT_COMMIT_SHA
              uses: hmanzur/actions-set-secret@v2.0.0
              with:
                  name: ${{ env.LAST_DEPLOYMENT_COMMIT_SHA }}
                  value: ${{ github.sha }}
                  repository: ${{ github.repository }}
                  token: ${{ secrets.PIPELINE_ACCESS_TOKEN }}
